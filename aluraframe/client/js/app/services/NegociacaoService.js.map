{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["HttpService","ConnectionFactory","NegociacaoDao","Negociacao","NegociacaoService","_http","Promise","resolve","reject","get","then","negociacoes","map","Date","objeto","data","quantidade","valor","catch","console","log","erro","all","obterNegociacoesDaSemana","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","periodos","reduce","dados","periodo","concat","dado","Error","negociacao","getConnection","connection","dao","adiciona","listaTodos","apagaTodos","listaAtual","obterNegociacoes","filter","some","isEquals","negociacaoExistente"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["import { HttpService } from './HttpService';\r\nimport { ConnectionFactory } from './ConnectionFactory';\r\nimport { NegociacaoDao } from '../dao/NegociacaoDao';\r\nimport { Negociacao } from '../models/Negociacao';\r\n\r\nexport class NegociacaoService{\r\n\r\n    constructor(){\r\n        this._http = new HttpService();\r\n    }\r\n\r\n    obterNegociacoesDaSemana(){\r\n        return new Promise((resolve, reject) => {\r\n            this._http\r\n                .get('negociacoes/semana')\r\n                .then(negociacoes => {\r\n                    resolve(negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)));\r\n                })\r\n                .catch(erro => {\r\n                    console.log(erro);\r\n                    reject('Não foi possivel obter as negociações da semana!')\r\n                });\r\n        });\r\n    }\r\n\r\n    obterNegociacoesDaSemanaAnterior(){\r\n        return new Promise((resolve, reject) => {\r\n            this._http\r\n                .get('negociacoes/anterior')\r\n                .then(negociacoes => {\r\n                    resolve(negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)));\r\n                })\r\n                .catch(erro => {\r\n                    console.log(erro);\r\n                    reject('Não foi possivel obter as negociações da semana anterior!')\r\n                });\r\n        });\r\n    }\r\n\r\n    obterNegociacoesDaSemanaRetrasada(){\r\n        return new Promise((resolve, reject) => {\r\n            this._http\r\n                .get('negociacoes/retrasada')\r\n                .then(negociacoes => {\r\n                    resolve(negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)));\r\n                })\r\n                .catch(erro => {\r\n                    console.log(erro);\r\n                    reject('Não foi possivel obter as negociações da semana retrasada!')\r\n                });\r\n        });\r\n    }\r\n\r\n    obterNegociacoes() {\r\n        return Promise.all([\r\n            this.obterNegociacoesDaSemana(),\r\n            this.obterNegociacoesDaSemanaAnterior(),\r\n            this.obterNegociacoesDaSemanaRetrasada()\r\n        ]).then(periodos => {\r\n            let negociacoes = periodos\r\n                .reduce((dados, periodo) => dados.concat(periodo), [])\r\n                .map(dado => new Negociacao(new Date(dado.data), dado.quantidade, dado.valor ));\r\n            return negociacoes;\r\n        }).catch(erro => {\r\n            throw new Error(erro);\r\n        });\r\n\t} \r\n\r\n    cadastra(negociacao) {\r\n         return ConnectionFactory\r\n            .getConnection()\r\n            .then(connection => new NegociacaoDao(connection))\r\n            .then(dao => dao.adiciona(negociacao))\r\n            .then(() => 'Negociação cadastrada com sucesso!')\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error(\"Não foi possível adicionar a negociação!\")\r\n            });\r\n    }\r\n\r\n    lista(){\r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(connection => new NegociacaoDao(connection))\r\n            .then(dao => dao.listaTodos()\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error('Não foi possivel obter as negociações!');\r\n            }));\r\n    }\r\n\r\n    apaga(){\r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(connection => new NegociacaoDao(connection))\r\n            .then(dao => dao.apagaTodos()\r\n            .then(() => 'Negociações apagadas com sucess!')\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error('Não foi possivel apagar as negociações!');\r\n            }));\r\n    }\r\n\r\n    importa(listaAtual){\r\n        return this.obterNegociacoes()\r\n            .then(negociacoes => \r\n                negociacoes.filter(negociacao => \r\n                    !listaAtual.negociacoes.some(negociacaoExistente => \r\n                        negociacao.isEquals(negociacaoExistente)))\r\n            )\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error('Não foi possivel importar as negociações!');\r\n            });\r\n    }\r\n\r\n}"]}